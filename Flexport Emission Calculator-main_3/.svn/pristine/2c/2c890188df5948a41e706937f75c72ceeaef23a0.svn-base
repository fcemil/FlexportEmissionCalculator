// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package emissioncalculatormodule.actions;

import java.math.BigDecimal;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;

public class DistanceCalculator extends CustomJavaAction<java.math.BigDecimal>
{
	private java.math.BigDecimal lat1;
	private java.math.BigDecimal lat2;
	private java.math.BigDecimal lon1;
	private java.math.BigDecimal lon2;

	public DistanceCalculator(IContext context, java.math.BigDecimal lat1, java.math.BigDecimal lat2, java.math.BigDecimal lon1, java.math.BigDecimal lon2)
	{
		super(context);
		this.lat1 = lat1;
		this.lat2 = lat2;
		this.lon1 = lon1;
		this.lon2 = lon2;
	}

	@java.lang.Override
	public java.math.BigDecimal executeAction() throws Exception
	{
		// BEGIN USER CODE
		double theta = lon1.doubleValue() - lon2.doubleValue() ;
		double dist = Math.sin(Math.toRadians(lat1.doubleValue())) * 
					  Math.sin(Math.toRadians(lat2.doubleValue() )) + 
					  Math.cos(Math.toRadians(lat1.doubleValue() )) * 
					  Math.cos(Math.toRadians(lat2.doubleValue() )) * 
					  Math.cos(Math.toRadians(theta));
		dist = Math.acos(dist);
		dist = Math.toDegrees(dist);
		dist = dist * 60 * 1.1515;
	
		dist = dist * 1.609344; //
		
	    return BigDecimal.valueOf(dist);
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "DistanceCalculator";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
